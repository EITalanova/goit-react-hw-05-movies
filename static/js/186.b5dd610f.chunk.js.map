{"version":3,"file":"static/js/186.b5dd610f.chunk.js","mappings":"yNA+CA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAGQK,EAAAA,EAAAA,IAAgBT,GAHxB,OAGRK,EAHQ,OAIZC,EAAWD,GAJC,gDAMdK,QAAQC,IAAR,MANc,yBAQdP,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,CAACR,IAECK,EAAQO,QAKX,yBACGT,GACC,yCAEA,wBACGE,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BAAG,mCAAH,IAAmBD,MACnB,uBAAIC,MAFGF,EADE,SATZ,qEAmBV,C,+LC3CDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAa,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,mCAAsCC,IADpC,uBACjBE,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKbC,EAAc,mCAAG,WAAOC,GAAP,yFACHN,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,EAApD,+CADG,uBAClBH,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKdI,EAAe,mCAAG,WAAOxB,GAAP,uFACTiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAsCkB,IACnDO,OAAM,SAAAC,GACH,MAAM,IAAIC,MAAM,OACnB,IAJsB,cACrBC,EADqB,yBAKpBA,EAAIR,MALgB,2CAAH,sDAQfS,EAAe,mCAAG,WAAO7B,GAAP,yFACJiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,4BAA8CkB,EAA9C,oBADI,uBACnBE,EADmB,EACnBA,KADmB,kBAEpBA,EAAKU,MAFe,2CAAH,sDAKfrB,EAAe,mCAAG,WAAOT,GAAP,yFACJiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,4BAA8CkB,IAD1C,uBACnBE,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","servises/movie-api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'servises/movie-api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const reviews = await getMovieReviews(movieId);\n          setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!reviews.length) {\n    return <div>We don`t have any reviews for this movie</div>;\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p><b>Author:</b> {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b6c97f79ccd06825dbbba1fc21aaa7f0';\n\nexport const getMovieTrend = async () => {\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n    return data.results;\n}\n\nexport const getSearchMovie = async (query) => {\n    const { data } = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return data;\n};\n\nexport const getMovieDetails = async (movieId) => {\n    const res = await axios.get(`movie/${movieId}?api_key=${API_KEY}`)\n        .catch(error => {\n            throw new Error('jjjj')\n        });\n    return res.data;\n};\n\nexport const getMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return data.results;\n};\n\n// export default getData;\n\n// https://api.themoviedb.org/3/search/movie?api_key=b6c97f79ccd06825dbbba1fc21aaa7f0&query=batmen"],"names":["movieId","useParams","useState","isLoading","setIsLoading","reviews","setReviews","useEffect","fetchData","getMovieReviews","console","log","length","map","id","author","content","axios","API_KEY","getMovieTrend","data","results","getSearchMovie","query","getMovieDetails","catch","error","Error","res","getMovieCredits","cast"],"sourceRoot":""}